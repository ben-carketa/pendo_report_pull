import csv
import requests
import os
import platform
from datetime import datetime, timedelta

# Constants
BASE_API_URL = 'https://app.pendo.io/api/v1/report/:reportId/results.csv'
API_KEY = 'my_api_key'

# Detect the operating system
system = platform.system()

# Set SAVE_PATH based on the operating system
if system == 'Windows':
    SAVE_PATH = os.path.abspath(r'C:\Users\B. Gary\Dropbox\Python_Practice')
elif system == 'Darwin': #'Darwin' is the platform name for macOS
    SAVE_PATH = os.path.abspath('/Users/benrasmus/Dropbox/Python_Practice)
else:
    # Handle other platforms here, if needed
    SAVE_PATH = os.path.abspath('.')


def api_request(url, headers):
    response = requests.get(url, headers=headers)
    return response

def save_csv(csv_data, file_path):
    with open(file_path, 'w', newline="") as csv_file:
        csv_file.write(csv_data)

def main():
    report_id = 'nlDuYQ6TkVp0UAr_ZZw2vSk0ybU' #Report ID pulled from Pendo

    headers = {
        'content-type': 'text/csv',
        'x-pendo-integration-key': API_KEY
    }

    api_url = BASE_API_URL.replace(':reportId', report_id)

    response = api_request(api_url, headers)

    if response.status_code == 200:
        csv_data = response.content.decode('utf-8')

        #Calc timestamp of prev day
        now = datetime.now()
        previous_day = now - timedelta(days=1)
        save_date = previous_day.strftime('%m.%d.%y')
        file_name = f'{save_date}_report.csv'
     
        #Modify CSV data to include the timestamp
        formatted_date = previous_day.strftime('%m-%d-%y')
        lines = csv_data.strip().split('\n')
        new_lines = ['Timestamp,' + lines[0]]  # Add header to the first line
        for line in lines[1:]:
            new_lines.append(f'{formatted_date},{line}')

        modified_csv_data = '\n'.join(new_lines)


        file_path = os.path.join(SAVE_PATH, file_name)
        save_csv(modified_csv_data, file_path)
        print('CSV data saved to', file_name)
    else:
        print('Error:', response.text)

if __name__ == '__main__':
    main()
