import csv
import requests
import os
import psycopg2
from datetime import datetime, timedelta

# Constants
BASE_API_URL = 'https://app.pendo.io/api/v1/report/:reportId/results.csv'
API_KEY = '744725bc-44c6-40f1-48d0-3b91f1362f12.us'
SAVE_PATH = os.path.abspath('/Users/benrasmus/Dropbox/Python_Practice') #'C:\Users\B. Gary\Dropbox\Python_Practice') --- replace this
DB_HOST = 'placeholder' # BE SURE TO REPLACE THESE PLACEHOLDERS
DB_PORT = 'placeholder' # BE SURE TO REPLACE THESE PLACEHOLDERS
DB_NAME = 'placeholder' # BE SURE TO REPLACE THESE PLACEHOLDERS
DB_USER = 'placeholder' # BE SURE TO REPLACE THESE PLACEHOLDERS
DB_PASSWORD = 'placeholder' # BE SURE TO REPLACE THESE PLACEHOLDERS
TABLE_NAME = 'placeholder' # BE SURE TO REPLACE THESE PLACEHOLDERS

def api_request(url, headers):
    response = requests.get(url, headers=headers)
    return response

def save_csv(csv_data, file_path):
    with open(file_path, 'w', newline="") as csv_file:
        csv_file.write(csv_data)

def transform_headers(headers):
    # Replace headers with the desired format
    new_headers = [header.lower().replace(' ', '_') for header in headers]
    return new_headers

def main():
    report_id = 'nlDuYQ6TkVp0UAr_ZZw2vSk0ybU'

    headers = {
        'content-type': 'text/csv',
        'x-pendo-integration-key': API_KEY
    }

    api_url = BASE_API_URL.replace(':reportId', report_id)

    response = api_request(api_url, headers)

    if response.status_code == 200:
        csv_data = response.content.decod('utf-8')

        # Calculate timestamp of previous day
        now = datetime.now()
        previous_day = now - timedelta(days=1)
        formatted_date = previous_day.strftime('%m,%d,%y')
        file_name = f'{formatted_date}_report.csv'

        # Modify CSV data to include the timestamp
        lines = csv_data.strip().split('\n')
        new_lines = ['timestamp,' + lines[0]] # Modify header
        for line in lines[1:]:
            new_lines.append(f'{formatted_date},{line}')
        
        modified_csv_data = '\n'.join(new_lines)

        file_path = os.path.join(SAVE_PATH, file_name)
        save_csv(modified_csv_data, file_path)
        print('CSV data saved to', file_name)

        # Transform headers
        transformed_headers = transform_headers(lines[0].split(','))

        # Instert data into PosgreSQL database
        try:
            connection = psycopg2.connect(
                host=DB_HOST,
                database=DB_NAME,
                user=DB_NAME,
                password=DB_PASSWORD,
                port=DB_PORT
            )
            cursor = connection.cursor()

            with open(file_path, 'r') as csv_file:
                csv_reader = csv.DictReader(csv_file, fieldnames=transformed_headers)
                next(csv_reader) # Skip the header row

                for row in csv_reader:
                    query = "INSERT INTO your_table_name VALUES (%s, %s, %s, %s, %s, %s, %s, %s)"
                    values = (
                        row['timestamp'],
                        row['visitor_id'],
                        row['account_id'],
                        row['name'],
                        row['events'],
                        row['days_active'],
                        row['first_visit'],
                        row['last_visit']
                    )
                    cursor.execute(query, values)

                connection.commit()
                print('Data inserted into PostgreSQL database')

        except (Exception, psycopg2.Error) as error:
            print('Error:', error)
        
        finally:
            if connection:
                cursor.close()
                connection.close()

    else:
        print('Error:', response.text)

if __name__ == '__main__':
    main()
